@inherits LayoutComponentBase

<FluentDesignTheme @bind-Mode="@_mode" @bind-OfficeColor="@_officeColor" StorageName="@AtlasComponentsConstants.ATLAS_THEME_STORAGE" />

<FluentLayout>
    <FluentToolbar id="toolbar-fluent-components-two" style="width:100%">
        <FluentIcon Value="@(new Icons.Filled.Size20.Globe())" />
        <FluentSpacer />
        <LoginDisplay />
        <AuthorizeView>
            <Authorized>
                @* <ToggleMode @rendermode="InteractiveServer" /> *@
            </Authorized>
        </AuthorizeView>
    </FluentToolbar>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <AuthorizeView>
            <Authorized>
                @* <NavMenu @rendermode="InteractiveServer" /> *@
            </Authorized>
        </AuthorizeView>
        <FluentBodyContent>
            <div class="content">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
</FluentLayout>

<FluentTooltipProvider />

@code {

    private DesignThemeModes _mode = DesignThemeModes.System;
    private OfficeColor? _officeColor = OfficeColor.Windows;

    // protected async override Task OnInitializedAsync()
    // {
    //     System.Diagnostics.Debug.WriteLine($"{GetType().Name} - OnInitializedAsync START");

    //     if (UserRequests == null)
    //     {
    //         throw new NullReferenceException(nameof(UserRequests));
    //     }

    //     if (AuthenticationStateProvider == null)
    //     {
    //         throw new ArgumentNullException(nameof(AuthenticationStateProvider));
    //     }

    //     await base.OnInitializedAsync();

    //     bool isAuthenticatedAtlasUser = await AuthenticationStateProvider.IsAuthenticatedAtlasUser().ConfigureAwait(false);

    //     if (isAuthenticatedAtlasUser)
    //     {
    //         string? theme = await UserRequests.GetThemeAsync().ConfigureAwait(false);

    //         if (string.IsNullOrEmpty(theme))
    //         {
    //             _mode = DesignThemeModes.System;
    //         }
    //         else
    //         {
    //             switch(theme)
    //             {
    //                 case AtlasConstants.THEME_DARK:
    //                     _mode = DesignThemeModes.Dark;
    //                     break;
    //                 case AtlasConstants.THEME_LIGHT:
    //                     _mode = DesignThemeModes.Light;
    //                     break;
    //                 default:
    //                     _mode = DesignThemeModes.System;
    //                     break;
    //             }
    //         }
    //     }

    //     System.Diagnostics.Debug.WriteLine($"{GetType().Name} - OnInitializedAsync END");
    // }
}