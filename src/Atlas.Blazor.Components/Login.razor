<AuthorizeView>
    <Authorized>
        
        <FluentAnchor Id="logout" Href="logout" Target="_self" Appearance="Appearance.Lightweight" IconEnd="@(new Icons.Regular.Size20.ArrowExit())">
            @userName
        </FluentAnchor>

        <FluentTooltip Anchor="logout" Position=TooltipPosition.Bottom>Logout</FluentTooltip>

    </Authorized>
    <NotAuthorized>
        
        <FluentAnchor Id="login" Href="login" Target="_self" Appearance="Appearance.Lightweight" IconEnd="@(new Icons.Regular.Size20.ArrowEnter())">
            Login
        </FluentAnchor>

        <FluentTooltip Anchor="login" Position=TooltipPosition.Bottom>Login</FluentTooltip>

    </NotAuthorized>
</AuthorizeView>

@code{
    [Inject]
    public AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    private string? userName;

    protected async override Task OnInitializedAsync()
    {
        if (AuthenticationStateProvider == null)
        {
            return;
        }

        bool isAuthenticatedAtlasUser = await AuthenticationStateProvider.IsAuthenticatedAtlasUser().ConfigureAwait(false);

        if (isAuthenticatedAtlasUser)
        {
            userName = await AuthenticationStateProvider.AuthenticatedAtlasUserName().ConfigureAwait(false);
        }
    }
}