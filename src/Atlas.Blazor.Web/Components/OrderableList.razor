<FluentDataGrid Items="@FilteredItems" ShowHover="true" TGridItem="string">
    <PropertyColumn Property="@(i => i)" Sortable="true" Filtered="!string.IsNullOrWhiteSpace(_filter)" Tooltip="true" Title="@Header">
        <ColumnOptions>
            <div class="search-box">
                <FluentSearch type="filter" Autofocus=true @bind-Value=_filter @oninput="HandleFilter" @bind-Value:after="HandleClear" Placeholder="@FilterPlaceholder" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
</FluentDataGrid>

@code {
    [Parameter]
    public IEnumerable<string>? Source { get; set; }

    [Parameter]
    public string? Header { get; set; }

    [Parameter]
    public string? FilterPlaceholder { get; set; }

    private string _filter = string.Empty;

    public IQueryable<string>? FilteredItems
    {
        get
        {
            if (string.IsNullOrWhiteSpace(_filter)) return Source?.AsQueryable();

            return Source?.AsQueryable().Where(i => !string.IsNullOrWhiteSpace(i)
            && i.Contains(_filter, StringComparison.CurrentCultureIgnoreCase));
        }
    }

    public void HandleFilter(ChangeEventArgs args)
    {
        if (args.Value is string value)
        {
            _filter = value;
        }
    }

    public void HandleClear()
    {
        if (string.IsNullOrWhiteSpace(_filter))
        {
            _filter = string.Empty;
        }
    }
}
