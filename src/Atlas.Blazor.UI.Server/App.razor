@inject TokenProvider TokenProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly"
            AdditionalAssemblies="new[] { typeof(NavMenu).Assembly }"
            PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <MudText Typo="Typo.body1">You are not authorized to access this resource.</MudText>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <MudText Typo="Typo.body1">Sorry, there's nothing at this address.</MudText>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Parameter]
    public InitialApplicationState? InitialApplicationState { get; set; }

    protected override Task OnInitializedAsync()
    {
        if(InitialApplicationState == null)
        {
            throw new NullReferenceException(nameof(InitialApplicationState));
        }

        TokenProvider.AccessToken = InitialApplicationState.AccessToken;
        TokenProvider.RefreshToken = InitialApplicationState.RefreshToken;
        TokenProvider.IdToken = InitialApplicationState.IdToken;

        return base.OnInitializedAsync();
    }
}